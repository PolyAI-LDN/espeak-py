# This file is autogenerated by maturin v1.7.4
# To update, run
#
#    maturin generate-ci github --platform linux --platform macos
#
# manual edits:
#    -  to limit the number of ubuntu variants
#    -  do the rust build step
#    -  to add the RUSTFLAGS environment variable
#    -  to specify python version used by maturin

name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_call:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: true
      - uses: actions/setup-python@v5
      - name: Build bindings
        run: |
          tools/build.sh
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
            RUSTFLAGS: -L espeak-ng/src/.libs
        with:
          target: ${{ matrix.platform.target }}
          # only CPython and PyPy (which fail) so specify the full path to the CPythons
          args: --release --out dist --interpreter /usr/local/bin/python3.9 --interpreter /usr/local/bin/python3.11
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
          # Fix up the python versions that maturin detects, as some break
          platform:
          - runner: macos-13
            target: x86_64
            python_args: --interpreter /Users/runner/hostedtoolcache/Python/3.9.20/x64/bin/python3.9 --interpreter /usr/local/bin/python3.11
          - runner: macos-14
            target: aarch64
            python_args: --interpreter python3.9 --interpreter python3.11
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: true
      - uses: actions/setup-python@v5
      - name: Build bindings
        run: |
            tools/build.sh
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
            RUSTFLAGS: -L espeak-ng/src/.libs
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist ${{ matrix.platform.python_args }}
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
#     needs: [linux, macos, sdist]
#     permissions:
#       # Use to sign the release artifacts
#       id-token: write
#       # Used to upload release artifacts
#       contents: write
#       # Used to generate artifact attestation
#       attestations: write
#     steps:
#       - uses: actions/download-artifact@v4
#       - name: Generate artifact attestation
#         uses: actions/attest-build-provenance@v1
#         with:
#           subject-path: 'wheels-*/*'
#       - name: Publish to PyPI
#         if: "startsWith(github.ref, 'refs/tags/')"
#         uses: PyO3/maturin-action@v1
#         env:
#           MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#         with:
#           command: upload
#           args: --non-interactive --skip-existing wheels-*/*
